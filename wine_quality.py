# -*- coding: utf-8 -*-
"""wine quality.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Jq083fRHRGe-XRTf6ki52WHBk7wPnw2U
"""

import numpy as np
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score

wine_dataset=pd.read_csv('/content/archive (2).zip')

print(wine_dataset)

wine_dataset.shape

wine_dataset.describe()

wine_dataset.head()

wine_dataset.isnull().sum()

"""correlation"""

corr_matrix=wine_dataset.corr()

corr_matrix['quality'].sort_values(ascending= False)

"""train test splitting"""

X=wine_dataset.drop('quality',axis=1)

print(X)

Y=wine_dataset['quality'].apply( lambda y_value:1 if y_value>=7 else 0)

print(Y)

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2, random_state=3
                                               )

model_1=RandomForestClassifier()

model.fit(X_train,Y_train)

#from sklearn import tree
#model=tree.DecisionTreeClassifier()

X_train_prediction=model.predict(X_train)

accuracy_X_train=accuracy_score(X_train_prediction,Y_train)

print(accuracy_X_train)

X_test_prediction=model.predict(X_test)

accuracy_X_test=accuracy_score(X_test_prediction,Y_test)

print(accuracy_X_test)

"""prediction"""

input_data=(7.8,0.58,0.02,2.0,0.073,9.0,18.0,0.9968,3.36,0.57,9.5)

input_data_as_numpy_array=np.asarray(input_data)

reshaped_input_numpy_array=input_data_as_numpy_array.reshape(1,-1)

prediction=model.predict(reshaped_input_numpy_array)

print(prediction)

"""1-->good wine
0-->bad wine
"""